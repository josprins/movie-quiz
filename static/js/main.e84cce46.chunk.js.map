{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","score","setScore","allAnswers","setAllAnswers","correctAnswer","setCorrectAnswer","question","setQuestion","index","setIndex","useEffect","a","axios","result","results","fetchData","getSingleItem","inCorrect","incorrect_answers","correct","correct_answer","singleQuestion","className","onClick","ReactHtmlParser","length","map","answer","e","target","innerHTML","handleScore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA0GeA,MApGf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEaF,mBAAS,GAFtB,mBAENG,EAFM,KAECC,EAFD,OAGuBJ,mBAAS,IAHhC,mBAGNK,EAHM,KAGMC,EAHN,OAI6BN,qBAJ7B,mBAINO,EAJM,KAISC,EAJT,OAKmBR,qBALnB,mBAKNS,EALM,KAKIC,EALJ,OAMaV,mBAAS,GANtB,mBAMNW,EANM,KAMCC,EAND,KAQbC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACuBC,IACnB,qFAFJ,OACQC,EADR,OAIEd,EAAQc,EAAOf,KAAKgB,SAJtB,4CADc,uBAAC,WAAD,wBAOdC,KACC,IAEH,IAAMC,EAAgB,WACpB,GAAc,KAAVR,EAAc,CAChBC,EAAS,GACT,IAAMQ,EAAYnB,EAAK,GAAGoB,kBACpBC,EAAUrB,EAAK,GAAGsB,eAClBlB,EAAU,sBAAOe,GAAP,CAAkBE,IAC5BE,EAAiBvB,EAAK,GAAGQ,SAC/BH,EAAcD,GACdK,EAAYc,GACZhB,EAAiBc,OACZ,CACLV,EAASD,EAAQ,GACjB,IAAMS,EAAYnB,EAAKU,GAAOU,kBACxBC,EAAUrB,EAAKU,GAAOY,eACtBlB,EAAU,sBAAOe,GAAP,CAAkBE,IAC5BE,EAAiBvB,EAAKU,GAAOF,SACnCH,EAAcD,GACdK,EAAYc,GACZhB,EAAiBc,KAWrB,OACE,qBAAKG,UAAU,MAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,4CACW,KAAVd,EACC,sBAAKc,UAAU,YAAf,UACE,gDAAmBtB,EAAnB,gBACA,mDACA,wBAAQuB,QAASP,EAAeM,UAAU,YAA1C,0BAKF,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,QAAf,SACE,wCAAWtB,EAAX,aAEF,qBAAKsB,UAAU,eAAf,SACGhB,EAAW,4BAAIkB,IAAgBlB,KAAiB,UAGrD,sBAAKgB,UAAU,mBAAf,UACyB,IAAtBpB,EAAWuB,OACRvB,EAAWwB,KAAI,SAACC,EAAQnB,GAAT,OACb,wBAEEc,UAAU,SACVC,QAAS,SAAAK,IAnCT,SAAAA,GACHA,EAAEC,OAAOC,YACT1B,GAEQH,EAASD,EAAQ,GAgCpB+B,CAAYH,GACZZ,KALJ,SAQGQ,IAAgBG,IAPZnB,MAUT,KAEJ,qBAAKc,UAAU,YAAf,SACyB,IAAtBpB,EAAWuB,OACV,wBAAQF,QAASP,EAAeM,UAAU,YAA1C,2BAGE,mBC5FpBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e84cce46.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactHtmlParser from 'react-html-parser'\nimport axios from 'axios'\n\nimport './css/main.css'\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [score, setScore] = useState(0)\n  const [allAnswers, setAllAnswers] = useState([])\n  const [correctAnswer, setCorrectAnswer] = useState()\n  const [question, setQuestion] = useState()\n  const [index, setIndex] = useState(0)\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\n        'https://opentdb.com/api.php?amount=10&category=11&difficulty=medium&type=multiple'\n      )\n      setData(result.data.results)\n    }\n    fetchData()\n  }, [])\n\n  const getSingleItem = () => {\n    if (index === 10) {\n      setIndex(0)\n      const inCorrect = data[0].incorrect_answers\n      const correct = data[0].correct_answer\n      const allAnswers = [...inCorrect, correct]\n      const singleQuestion = data[0].question\n      setAllAnswers(allAnswers)\n      setQuestion(singleQuestion)\n      setCorrectAnswer(correct)\n    } else {\n      setIndex(index + 1)\n      const inCorrect = data[index].incorrect_answers\n      const correct = data[index].correct_answer\n      const allAnswers = [...inCorrect, correct]\n      const singleQuestion = data[index].question\n      setAllAnswers(allAnswers)\n      setQuestion(singleQuestion)\n      setCorrectAnswer(correct)\n    }\n  }\n\n  const handleScore = e => {\n    const target = e.target.innerHTML\n    const answer = correctAnswer\n\n    if (target === answer) setScore(score + 1)\n  }\n\n  return (\n    <div className='App'>\n      <div className='game-container'>\n        <h1>Movie Quiz</h1>\n        {index === 10 ? (\n          <div className='game-over'>\n            <h3>Your score is {score} out of 10</h3>\n            <h2>G A M E - O V E R</h2>\n            <button onClick={getSingleItem} className='start-btn'>\n              GO AGAIN!\n            </button>\n          </div>\n        ) : (\n          <div className='bottom-section'>\n            <div className='question-score'>\n              <div className='score'>\n                <p>SCORE: {score} / 10</p>\n              </div>\n              <div className='question-box'>\n                {question ? <p>{ReactHtmlParser(question)}</p> : null}\n              </div>\n            </div>\n            <div className='answer-container'>\n              {allAnswers.length !== 0\n                ? allAnswers.map((answer, index) => (\n                    <button\n                      key={index}\n                      className='answer'\n                      onClick={e => {\n                        handleScore(e)\n                        getSingleItem()\n                      }}\n                    >\n                      {ReactHtmlParser(answer)}\n                    </button>\n                  ))\n                : null}\n\n              <div className='start-div'>\n                {allAnswers.length === 0 ? (\n                  <button onClick={getSingleItem} className='start-btn'>\n                    Get Questions\n                  </button>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}